# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog

import NotesExtract
import tts
import requests
import urllib


class Ui_MainWindow(object):
    file_dir = ' '
    save_dir = ' '

    _translate = QtCore.QCoreApplication.translate

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(530, 230)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 10, 491, 211))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.FileDirLabel = QtWidgets.QLabel(self.layoutWidget)
        self.FileDirLabel.setObjectName("FileDirLabel")
        self.horizontalLayout_2.addWidget(self.FileDirLabel)
        self.FileDirBlank = QtWidgets.QTextBrowser(self.layoutWidget)
        self.FileDirBlank.setEnabled(True)
        self.FileDirBlank.setMaximumSize(QtCore.QSize(16777215, 25))
        self.FileDirBlank.setObjectName("FileDirBlank")
        self.horizontalLayout_2.addWidget(self.FileDirBlank)
        self.ChooseFileButton = QtWidgets.QPushButton(self.layoutWidget)
        self.ChooseFileButton.setMinimumSize(QtCore.QSize(108, 0))
        self.ChooseFileButton.setObjectName("ChooseFileButton")
        self.horizontalLayout_2.addWidget(self.ChooseFileButton)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.VoiceCheck = QtWidgets.QLabel(self.layoutWidget)
        self.VoiceCheck.setMaximumSize(QtCore.QSize(70, 16777215))
        self.VoiceCheck.setObjectName("VoiceCheck")
        self.horizontalLayout.addWidget(self.VoiceCheck)
        self.GenderLabel = QtWidgets.QLabel(self.layoutWidget)
        self.GenderLabel.setEnabled(True)
        self.GenderLabel.setMaximumSize(QtCore.QSize(40, 16777215))
        self.GenderLabel.setObjectName("GenderLabel")
        self.horizontalLayout.addWidget(self.GenderLabel)
        self.ChooseGender = QtWidgets.QComboBox(self.layoutWidget)
        self.ChooseGender.setMaximumSize(QtCore.QSize(80, 16777215))
        self.ChooseGender.setObjectName("ChooseGender")
        self.ChooseGender.addItem("")
        self.ChooseGender.addItem("")
        self.horizontalLayout.addWidget(self.ChooseGender)
        self.SynthLabel = QtWidgets.QLabel(self.layoutWidget)
        self.SynthLabel.setMinimumSize(QtCore.QSize(55, 0))
        self.SynthLabel.setMaximumSize(QtCore.QSize(80, 16777215))
        self.SynthLabel.setObjectName("SynthLabel")
        self.horizontalLayout.addWidget(self.SynthLabel)
        self.ChooseSpeakerId = QtWidgets.QComboBox(self.layoutWidget)
        self.ChooseSpeakerId.setMinimumSize(QtCore.QSize(110, 0))
        self.ChooseSpeakerId.setMaximumSize(QtCore.QSize(110, 16777215))
        self.ChooseSpeakerId.setObjectName("ChooseSpeakerId")
        self.ChooseSpeakerId.addItem("")
        self.ChooseSpeakerId.addItem("")
        self.horizontalLayout.addWidget(self.ChooseSpeakerId)
        self.PreviewButton = QtWidgets.QPushButton(self.layoutWidget)
        self.PreviewButton.setMinimumSize(QtCore.QSize(108, 0))
        self.PreviewButton.setMaximumSize(QtCore.QSize(108, 16777215))
        self.PreviewButton.setObjectName("PreviewButton")
        self.horizontalLayout.addWidget(self.PreviewButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.SavedDirLabel = QtWidgets.QLabel(self.layoutWidget)
        self.SavedDirLabel.setObjectName("SavedDirLabel")
        self.horizontalLayout_3.addWidget(self.SavedDirLabel)
        self.SavedDirBlank = QtWidgets.QTextBrowser(self.layoutWidget)
        self.SavedDirBlank.setMaximumSize(QtCore.QSize(16777215, 25))
        self.SavedDirBlank.setObjectName("SavedDirBlank")
        self.horizontalLayout_3.addWidget(self.SavedDirBlank)
        self.ChooseSavedDirButton = QtWidgets.QPushButton(self.layoutWidget)
        self.ChooseSavedDirButton.setObjectName("ChooseSavedDirButton")
        self.horizontalLayout_3.addWidget(self.ChooseSavedDirButton)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.StatusLabel = QtWidgets.QLabel(self.layoutWidget)
        self.StatusLabel.setMinimumSize(QtCore.QSize(265, 0))
        self.StatusLabel.setObjectName("StatusLabel")
        self.horizontalLayout_4.addWidget(self.StatusLabel)
        self.PinyinCheck = QtWidgets.QCheckBox(self.layoutWidget)
        self.PinyinCheck.setObjectName("PinyinCheck")
        self.horizontalLayout_4.addWidget(self.PinyinCheck)
        self.ConvertButton = QtWidgets.QPushButton(self.layoutWidget)
        self.ConvertButton.setObjectName("ConvertButton")
        self.horizontalLayout_4.addWidget(self.ConvertButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(10, 230, 511, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.CompleteButton = QtWidgets.QPushButton(self.centralwidget)
        self.CompleteButton.setGeometry(QtCore.QRect(398, 474, 108, 32))
        self.CompleteButton.setObjectName("CompleteButton")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(20, 250, 491, 221))
        self.widget.setObjectName("widget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.TextBrowser = QtWidgets.QTextBrowser(self.widget)
        self.TextBrowser.setObjectName("TextBrowser")
        self.horizontalLayout_5.addWidget(self.TextBrowser)
        self.PinyinEdit = QtWidgets.QTextEdit(self.widget)
        self.PinyinEdit.setObjectName("PinyinEdit")
        self.horizontalLayout_5.addWidget(self.PinyinEdit)
        MainWindow.setCentralWidget(self.centralwidget)
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionOption = QtWidgets.QAction(MainWindow)
        self.actionOption.setObjectName("actionOption")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionPreference = QtWidgets.QAction(MainWindow)
        self.actionPreference.setObjectName("actionPreference")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.ChooseFileButton.clicked.connect(self.openfile)
        self.ChooseSavedDirButton.clicked.connect(self.savefile)
        self.ConvertButton.clicked.connect(self.convert)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(self._translate("MainWindow", "MainWindow"))
        self.FileDirLabel.setText(self._translate("MainWindow", "文件路径："))
        self.FileDirBlank.setHtml(self._translate("MainWindow",
                                                  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                                  "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                                  "p, li { white-space: pre-wrap; }\n"
                                                  "</style></head><body style=\" font-family:\'.SF NS Text\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
                                                  "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.ChooseFileButton.setText(self._translate("MainWindow", "选择文件"))
        self.VoiceCheck.setText(self._translate("MainWindow", "语音设定："))
        self.GenderLabel.setText(self._translate("MainWindow", "性别"))
        self.ChooseGender.setItemText(0, self._translate("MainWindow", "男声"))
        self.ChooseGender.setItemText(1, self._translate("MainWindow", "女声"))
        self.SynthLabel.setText(self._translate("MainWindow", "语调设定"))
        self.ChooseSpeakerId.setItemText(0, self._translate("MainWindow", "100453"))
        self.ChooseSpeakerId.setItemText(1, self._translate("MainWindow", "100458"))
        self.PreviewButton.setText(self._translate("MainWindow", "试听"))
        self.SavedDirLabel.setText(self._translate("MainWindow", "保存路径："))
        self.SavedDirBlank.setHtml(self._translate("MainWindow",
                                                   "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                                   "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                                   "p, li { white-space: pre-wrap; }\n"
                                                   "</style></head><body style=\" font-family:\'.SF NS Text\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
                                                   "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.ChooseSavedDirButton.setText(self._translate("MainWindow", "选择文件夹"))
        self.StatusLabel.setText(self._translate("MainWindow",
                                                 "<html><head/><body><p><span style=\" font-size:14pt; color:#21ff06;\">一切就绪！</span></p></body></html>"))
        self.PinyinCheck.setText(self._translate("MainWindow", "启用拼音检查"))
        self.ConvertButton.setText(self._translate("MainWindow", "开始转换"))
        self.CompleteButton.setText(self._translate("MainWindow", "修改完成"))
        self.actionAbout.setText(self._translate("MainWindow", "About"))
        self.actionOption.setText(self._translate("MainWindow", "Option"))
        self.actionQuit.setText(self._translate("MainWindow", "Quit"))
        self.actionPreference.setText(self._translate("MainWindow", "Preference"))

    def openfile(self):
        openfile_name = QFileDialog.getOpenFileName(None, '选择文件', '', 'Pptx files(*.pptx)')
        self.file_dir = openfile_name[0]
        self.FileDirBlank.setText(self.file_dir)

    def savefile(self):
        self.save_dir = QtWidgets.QFileDialog.getExistingDirectory(None, "getExistingDirectory", "./")
        self.SavedDirBlank.setText(self.save_dir)

    def convert(self, MainWindow):
        if self.file_dir == ' ':
            # self.StatusLabel.setText("文件目录为空!请检查后重试!")
            self.StatusLabel.setText(self._translate("MainWindow",
                                                     "<html><head/><body><p><span style=\" "
                                                     "font-size:14pt; color:#ff0000;\""
                                                     ">文件目录为空!请检查后重试!"
                                                     "</span></p></body></html>"))
            return
        if self.save_dir == ' ':
            # self.StatusLabel.setText("保存路径为空!请检查后重试!")
            self.StatusLabel.setText(self._translate("MainWindow",
                                                     "<html><head/><body><p><span style=\" "
                                                     "font-size:14pt; color:#ff0000;\""
                                                     ">保存路径为空!请检查后重试!"
                                                     "</span></p></body></html>"))
            return
        if self.PinyinCheck.isChecked():
            MainWindow.resize(530, 510)
        self._download_()

    def _download_(self):
        notes = NotesExtract.ObtainPptNote(self.file_dir)
        gender_opt = self.ChooseSpeakerId.currentText()
        if self.PinyinCheck.isChecked():
            self.StatusLabel.setText(self._translate("MainWindow",
                                                     "<html><head/><body><p><span style=\" "
                                                     "font-size:14pt; color:#0000cd;\""
                                                     ">正在获取备注及拼音..."
                                                     "</span></p></body></html>"))
            for i in range(0, len(notes)):
                if notes[i] == '\n':
                    continue
                else:
                    slide = tts.tts(notes[i], gender_opt)
                    self.TextBrowser.append(slide[0])
                    self.PinyinEdit.append(slide[1])
            self.StatusLabel.setText(self._translate("MainWindow",
                                                     "<html><head/><body><p><span style=\""
                                                     " font-size:14pt; color:#21ff06;\""
                                                     ">备注及拼音获取完成!请核对修改拼音!</span></p></body></html>"))
            return
        for i in range(0, len(notes)):
            if notes[i] == '\n':
                continue
            self.StatusLabel.setText(self._translate("MainWindow",
                                                     "<html><head/><body><p><span style=\" "
                                                     "font-size:14pt; color:#0000cd;\""
                                                     ">正在处理第" + str(i + 1) + "页幻灯片..."
                                                                             "</span></p></body></html>"))

            url = tts.tts(notes[i], gender_opt)
            if url is None:
                self.StatusLabel.setText(self._translate("MainWindow",
                                                         "<html><head/><body><p><span style=\" "
                                                         "font-size:14pt; color:#ff0000;\""
                                                         ">转换出错!请重试!</span></p></body></html>"))
                return
            f = requests.get(url)
            with open(str(i + 1) + ".wav", "wb") as code:
                code.write(f.content)
        self.StatusLabel.setText(self._translate("MainWindow",
                                                 "<html><head/><body><p><span style=\""
                                                 " font-size:14pt; color:#21ff06;\""
                                                 ">音频转换完成!</span></p></body></html>"))
